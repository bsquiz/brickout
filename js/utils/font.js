const BrickoutFont = {
	characterCols: 5,
	characterPadding: 5,
	sectionWidth: 1,
	sectionHeight: 1,
	characters: {
		' ': [
			' ',' ',' ',' ',' ',
			' ',' ',' ',' ',' ',
			' ',' ',' ',' ',' ',
			' ',' ',' ',' ',' ',
			' ',' ',' ',' ',' ',
			' ',' ',' ',' ',' ',
			' ',' ',' ',' ',' ',
			' ',' ',' ',' ',' ',
			' ',' ',' ',' ',' ',
			' ',' ',' ',' ',' ',
			' ',' ',' ',' ',' '
		],
		'a': [
			'*','*','*','*','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*','*','*','*','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*'
		],
		'c': [
			'*','*','*','*','*',
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*','*','*','*','*'
		],
		'e': [
			'*','*','*','*','*',
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*','*','*','*','*',
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*','*','*','*','*'
		],
		'g': [
			'*','*','*','*','*',
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*','*','*','*','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*','*','*','*','*'
		],
		'i': [
			'*','*','*','*','*',
			' ',' ','*',' ',' ',
			' ',' ','*',' ',' ',
			' ',' ','*',' ',' ',
			' ',' ','*',' ',' ',
			' ',' ','*',' ',' ',
			' ',' ','*',' ',' ',
			' ',' ','*',' ',' ',
			' ',' ','*',' ',' ',
			'*','*','*','*','*'
		],
		'l': [
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*','*','*','*','*'
		],
		'm': [
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*','*',' ','*','*',
			'*',' ','*',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*'
		],
		'o': [
			'*','*','*','*','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*','*','*','*','*'
		],
		'r': [
			'*','*','*','*','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*','*','*','*','*',
			'*','*',' ',' ',' ',
			'*',' ','*',' ',' ',
			'*',' ',' ','*',' ',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*'
		],
		's': [
			'*','*','*','*','*',
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*','*','*','*','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			'*','*','*','*','*'
		],
		'v': [
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			' ','*',' ','*',' ',
			' ','*',' ','*',' ',
			' ',' ','*',' ',' '
		],
		'0': [
			'*','*','*','*','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*','*','*','*','*'
		],
		'1': [
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*'
		],
		'2': [
			'*','*','*','*','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			'*','*','*','*','*',
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*','*','*','*','*'
		],
 		'3': [
			'*','*','*','*','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			'*','*','*','*','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			'*','*','*','*','*'
		],
 		'4': [
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*','*','*','*','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*'
		],
		'5': [
			'*','*','*','*','*',
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*','*','*','*','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			'*','*','*','*','*'
		],
		'6': [
			'*','*','*','*','*',
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*',' ',' ',' ',' ',
			'*','*','*','*','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*','*','*','*','*'
		],
		'7': [
			'*','*','*','*','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*'
		],
		'8': [
			'*','*','*','*','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*','*','*','*','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*','*','*','*','*'
		],
		'9': [
			'*','*','*','*','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*',' ',' ',' ','*',
			'*','*','*','*','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*',
			' ',' ',' ',' ','*'
		]
	},

	drawString(string, x, y, scale, ctx) {
		const str = string.toString();
		const sW = this.sectionWidth * scale * this.characterCols;
		let drawX = x;
	
		for (let i=0; i<str.length; i++) {
			this.drawCharacter(str[i], drawX, y, scale, ctx);
			drawX += this.sectionWidth * scale * this.characterCols;
			drawX += this.characterPadding;
		}
	},
		
	drawCharacter(character, x, y, scale, ctx) {
		const map = this.characters[character.toString().toLowerCase()];
		const sW = this.sectionWidth * scale;
		const sH = this.sectionHeight * scale;
		let drawX = x;
		let drawY = y;
		let currentCol = 1;	

		if (map) {
			for (let i=0; i<map.length; i++) {
				if (map[i] === '*') {
					ctx.fillRect(drawX, drawY, sW, sH);
				}
				if (currentCol === this.characterCols) {
					// move down one row
					drawY += sH;
					drawX = x;
					currentCol = 1; 
				} else {
					// move across one column
					drawX += sW;
					currentCol++;
				}
			}
		}
	}
};
